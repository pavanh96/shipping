name: ci

on:
  push:
    branches:
      - "*"  # run for branches
    tags:
      - "*"  # run for tags
  pull_request:
    branches:
      - "*"  # run for branches
    tags:
      - "*"  # run for tags

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GROUP: weaveworksdemos
      COMMIT: ${{ github.sha }}
      REPO: shipping
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B -DskipTests package --file pom.xml

      - name: Unit Tests
        run: mvn -q test

      - name: Integration Tests
        run: mvn integration-test

      # Upload coverage results to coveralls
#      - name: Submit Coveralls
#        env:
#          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
#       run: mvn -DrepoToken=${COVERALLS_TOKEN} -DserviceJobId=${GITHUB_RUN_ID} -Dbranch=${GITHUB_REF} -DpullRequest=${GITHUB_HEAD_REF} -DserviceName=GITHUB verify jacoco:report coveralls:report

      - name: docker login
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "pavankumar789" --password-stdin
      # Push to dockerhub
#       - name: Push to Docker Hub
#         uses: mr-smithers-excellent/docker-build-push@v5
#         if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
#         with:
#           dockerfile: docker/shipping/Dockerfile
#           path: target/
#           registry: docker.io
#           image: pavankumar789/gitactions
#           # tag_with_ref: true
#           # tag_with_sha: true
      - name: Configure AWS credientionals
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build and Push ECR
        run: |
           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: devops-tech
          IMAGE_TAG: latest
       
